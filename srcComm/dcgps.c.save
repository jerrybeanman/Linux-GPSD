#include "dcgps.h"

int main()
{
	static struct fixsource_t source;
	struct gps_data_t* gpsdata;
        unsigned int flag = GPSpsdata = malloc (sizeof (struct gps_data_t));
	if (gps_open(source.server , source.port, gpsdata) == -1)
	{
		dcgps_error(NO_GPS);
		return 1;
	}







      

	gps_stream(gpsdata, flag, source.device);
	read(gpsdata);
	return 0;
}


char *deg_to_str(double f)
{
	static char str[40];
	int dsec, sec, deg, min;
	double fdsec, fsec, fdeg, fmin;

	if (f < 0 || f > 360)
		(void)strcpy(str, "nan");
    	else
    	{
    	fmin = modf(f, &fdeg);
    	deg = (int)fdeg;

    	fdsec = modf(fsec * 60, &fsec);
    	sec = (int)fsec;
    	dsec = (int)(fdsec * 1000.0);
    	(void)snprintf(str, sizeof(str), "%3d %02d' %02d.%03d\"", deg, min, sec, dsec);
    	}
    	return str;
}










