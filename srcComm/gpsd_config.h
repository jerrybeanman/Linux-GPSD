/* gpsd_config.h.  Generated by scons, do not hand-hack.  */

#ifndef GPSD_CONFIG_H

#define VERSION "3.15"

#define GPSD_URL "http://catb.org/gpsd"

#define HAVE_LIBUSB 1

#define HAVE_LIBRT 1

#define HAVE_DBUS 1

/* #undef ENABLE_BLUEZ */

#define HAVE_LINUX_CAN_H 1

/* #undef HAVE_STDATOMIC_H */

/* #undef HAVE_OSATOMIC_H */

#define HAVE_BUILTIN_ENDIANNESS 1

/* #undef HAVE_ENDIAN_H */

/* #undef HAVE_SYS_ENDIAN_H */

#define HAVE_DAEMON 1

/* #undef HAVE_STRLCPY */

/* #undef HAVE_STRLCAT */

#define HAVE_CLOCK_GETTIME 1

/* AIVDM support */
#define AIVDM_ENABLE 1

/* Ashtech support */
#define ASHTECH_ENABLE 1

/* application binaries directory */
#define BINDIR "bin"

/* BlueZ support for Bluetooth devices */
/* #undef BLUEZ_ENABLE */

/* client debugging support */
#define CLIENTDEBUG_ENABLE 1

/* control socket for hotplug notifications */
#define CONTROL_SOCKET_ENABLE 1

/* allow gpsctl/gpsmon to change device settings */
#define CONTROLSEND_ENABLE 1

/* build with code coveraging enabled */
/* #undef COVERAGING_ENABLE */

/* enable DBUS export support */
#define DBUS_EXPORT_ENABLE 1

/* include debug information in build */
#define DEBUG_ENABLE 1

/* documents directory */
#define DOCDIR "share/doc"

/* DeLorme EarthMate Zodiac support */
#define EARTHMATE_ENABLE 1

/* EverMore binary support */
#define EVERMORE_ENABLE 1

/* fixed serial port speed */
/* #undef FIXED_PORT_SPEED */

/* fixed serial port stop bits */
/* #undef FIXED_STOP_BITS */

/* force daemon to listen on all addressses */
/* #undef FORCE_GLOBAL_ENABLE */

/* Jackson Labs Fury and Firefly support */
#define FURY_ENABLE 1

/* San Jose Navigation FV-18 support */
#define FV18_ENABLE 1

/* Garmin kernel driver support */
#define GARMIN_ENABLE 1

/* Garmin Simple Text support */
#define GARMINTXT_ENABLE 1

/* Geostar Protocol support */
#define GEOSTAR_ENABLE 1

/* GPSClock support */
#define GPSCLOCK_ENABLE 1

/* privilege revocation group */
#define GPSD_GROUP "dialout"

/* privilege revocation user */
#define GPSD_USER "nobody"

/* implicit linkage is supported in shared libs */
#define IMPLICIT_LINK_ENABLE 1

/* header file directory */
#define INCLUDEDIR "include"

/* build IPv6 support */
#define IPV6_ENABLE 1

/* iTrax hardware support */
#define ITRAX_ENABLE 1

/* fetch up-to-date data on leap seconds. */
#define LEAPFETCH_ENABLE 1

/* system libraries */
#define LIBDIR "lib"

/* build C++ bindings */
#define LIBGPSMM_ENABLE 1

/* build help in man and HTML formats */
#define MANBUILD_ENABLE 1

/* manual pages directory */
#define MANDIR "share/man"

/* maximum allowed clients */
#define MAX_CLIENTS 64

/* maximum allowed devices */
#define MAX_DEVICES 4

/* turn off every option not set on the command line */
/* #undef MINIMAL_ENABLE */

/* MTK-3301 support */
#define MTK3301_ENABLE 1

/* Navcom NCT support */
#define NAVCOM_ENABLE 1

/* build with ncurses */
#define NCURSES_ENABLE 1

/* build support for handling TCP/IP data sources */
#define NETFEED_ENABLE 1

/* NMEA0183 support */
#define NMEA0183_ENABLE 1

/* NMEA2000/CAN support */
#define NMEA2000_ENABLE 1

/* float ops are expensive, suppress error estimates */
/* #undef NOFLOATS_ENABLE */

/* don't symbol-strip binaries at link time */
/* #undef NOSTRIP_ENABLE */

/* NTP time hinting support */
#define NTP_ENABLE 1

/* NTP time hinting via shared memory */
#define NTPSHM_ENABLE 1

/* NTRIP support */
#define NTRIP_ENABLE 1

/* OceanServer support */
#define OCEANSERVER_ENABLE 1

/* Motorola OnCore chipset support */
#define ONCORE_ENABLE 1

/* build support for passing through JSON */
#define PASSTHROUGH_ENABLE 1

/* pkgconfig file directory */
#define PKGCONFIG "lib/pkgconfig"

/* PPS time syncing support */
#define PPS_ENABLE 1

/* installation directory prefix */
#define PREFIX "/usr/local"

/* build with profiling enabled */
/* #undef PROFILING_ENABLE */

/* build Python support and modules. */
#define PYTHON_ENABLE 1

/* Python module directory prefix */
#define PYTHON_LIBDIR "/usr/lib/python2.7/dist-packages"

/* build QT bindings */
#define QT_ENABLE 1

/* allow gpsd to change device settings */
#define RECONFIGURE_ENABLE 1

/* rtcm104v2 support */
#define RTCM104V2_ENABLE 1

/* rtcm104v3 support */
#define RTCM104V3_ENABLE 1

/* system binaries directory */
#define SBINDIR "sbin"

/* build shared libraries, not static */
#define SHARED_ENABLE 1

/* export via shared memory */
#define SHM_EXPORT_ENABLE 1

/* SiRF chipset support */
#define SIRF_ENABLE 1

/* run tests with realistic (slow) delays */
/* #undef SLOW_ENABLE */

/* data export over sockets */
#define SOCKET_EXPORT_ENABLE 1

/* squelch gpsd_log/gpsd_hexdump to save cpu */
/* #undef SQUELCH_ENABLE */

/* Novatel SuperStarII chipset support */
#define SUPERSTAR2_ENABLE 1

/* system configuration directory */
#define SYSCONFDIR "etc"

/* cross-development system root */
/* #undef SYSROOT */

/* systemd socket activation */
#define SYSTEMD_ENABLE 1

/* cross-development target */
/* #undef TARGET */

/* latency timing support */
#define TIMING_ENABLE 1

/* True North Technologies support */
#define TNT_ENABLE 1

/* DeLorme TripMate support */
#define TRIPMATE_ENABLE 1

/* Trimble TSIP support */
#define TSIP_ENABLE 1

/* u-blox Protocol support */
#define UBLOX_ENABLE 1

/* udev rules directory */
#define UDEVDIR "/lib/udev"

/* libusb support for USB devices */
#define USB_ENABLE 1

/* Some libcs do not have strlcat/strlcpy. Local copies are provided */
#ifndef HAVE_STRLCAT
# ifdef __cplusplus
extern "C" {
# endif
#include <string.h>
size_t strlcat(/*@out@*/char *dst, /*@in@*/const char *src, size_t size);
# ifdef __cplusplus
}
# endif
#endif
#ifndef HAVE_STRLCPY
# ifdef __cplusplus
extern "C" {
# endif
#include <string.h>
size_t strlcpy(/*@out@*/char *dst, /*@in@*/const char *src, size_t size);
# ifdef __cplusplus
}
# endif
#endif
#ifndef HAVE_CLOCK_GETTIME
# ifdef __cplusplus
extern "C" {
# endif
#ifndef CLOCKID_T_DEFINED
typedef int clockid_t;
#define CLOCKID_T_DEFINED
# endif
/* OS X uses _STRUCT_TIMESPEC, but no clock_gettime */
#ifndef _STRUCT_TIMESPEC
struct timespec {
    time_t  tv_sec;
    long    tv_nsec;
};
#endif
#define CLOCK_REALTIME	0
int clock_gettime(clockid_t, struct timespec *);
# ifdef __cplusplus
}
# endif
#endif

#define GPSD_CONFIG_H
#endif /* GPSD_CONFIG_H */
